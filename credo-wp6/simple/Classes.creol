class SimpleRoutingTable
  implements RoutingTable
begin
  var table: List[[Node, Node]] := nil

  with Any
    op registerRoute(in from: Node, to: Node) ==
      table := table |- (from,to)

  with Node
    op connected(in target: Node; out value: Bool) ==
      value := has(table, (caller,target))

end

class SimpleSensorNode (rt: RoutingTable)
  implements SensorNode
begin
  with Node
    op receive (in data: Data, hops: Int) ==
      skip
    op send (in data: Data, hops: Int) ==
      skip

  op run ==
    skip // TODO: 

end

class SimpleSinkNode (rt: RoutingTable)
  implements SinkNode
begin
  with Node
    op receive (in data: Data, hops: Int) ==
      skip
end
