@c node-name, next, previous, up
@node Model-checking Creol
@chapter Model-Checking Creol

The model checker is a version of the interpreter that is specifically
tuned towards model checking.  It has the same structure as the
interpreter, and has almost the same definitions.  In this section we
point out the most important differences.

The model checker is defined in the file
@file{creol-modelchecker.maude} (@pxref{Setting CMC Up}).

XXX

@menu
* Differences::         Differences to the Interpreter.
* LTL Specifications::  Writing properties for the interpreter.
* Model Checking::	Model Checking.
@end menu


@node Differences
@section Differences to the Interpreter

XXX


@node LTL Specifications
@section LTL Specifications

Currently, the support for LTL specifications is ad-hoc.  We express
state properties in Maude and use the standard methods to turn it into
LTL specifications for model checking.  However, we must specify in a
way that all object identities are present in the initial state.

Normal object identities of objects created in normal methods will only
work if the property is @emph{symmetric} for all instances of a class,
since we cannot control which identity that object will receive.

A more refined description will come later.
@c XXX Finish this, after Immo came up with something.



@node Model Checking
@section Model Checking Creol Prorams

The specification language of the model checker is currently ad-hoc.
Therefore, we currently cannot give any suggestions for using the model
checker.  See the examples for some ideas on how to use it.
