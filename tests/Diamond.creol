
class A(x: Integer)
begin
  var a: Integer
  op init == a := x
  with Any
    op m(out r: Integer) == r := a
end

class B(x: Integer) inherits A(x)
begin
  var b: Integer
  op init == b := x ; prove a = b
  with Any
    op n(out r: Integer) == r := b
end

class C(x: Integer) inherits A(x)
begin
end

class D inherits B(1), C(2)
begin
  op init == skip
  op run == var x: Integer; var y: Integer; m(; x); n(; y); prove x = y
end
