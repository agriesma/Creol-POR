==========================================
reduce in PROGRAM : init .
result Configuration: 
< "Init" : Cl | Inh: noInh, Par: noVid, Att: "p1" |-> null, "p2" |-> null, "p3"
    |-> null, Mtds:
  < "getNeighbor" : Mtdname | Param: noVid, Latt: "p" |-> null, Code: if "="(
    "caller" # "p1") th "p" ::= "p3" el if "="("caller" # "p2") th "p" ::= "p1"
    el "p" ::= "p2" fi fi ; return("p") > *
  < "init" : Mtdname | Param: noVid, Latt: noSubst, Code: "p1" ::= new
    "Process"("this" # int(1)) ; "p2" ::= new "Process"("this" # int(2)) ; "p3"
    ::= new "Process"("this" # int(3)) ; return(emp) >,
  Ocnt: 0 >

< "Process" : Cl | Inh: noInh, Par: "i", "u", Att: "i" |-> null, "neighbor" |->
    null, "status" |-> null, "u" |-> null, Mtds:
  < "init" : Mtdname | Param: noVid, Latt: "label:0" |-> null, "label:1" |->
    null, Code: "status" ::= int(0) ; "label:0" ! "i" . "getNeighbor"(emp) ;
    "label:0" ?("neighbor") ; "label:1" ! "neighbor" . "receive"("u") ; free(
    "label:1") ; return(emp) > *
  < "receive" : Mtdname | Param: "v", Latt: "label:0" |-> null, "v" |-> null,
    Code: if ">"("v" # "u") th "label:0" ! "neighbor" . "receive"("v") ; free(
    "label:0") el if "="("v" # "u") th "status" ::= int(1) el skip fi fi ;
    return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) >,
  Ocnt: 0 >
==========================================
rewrite in PROGRAM : init
main("Init", emp) .
result Configuration: 
< ob("Init0") : Qu | Size: 10, Dealloc: noDealloc, Ev: noMsg >

< ob("Process0") : Qu | Size: 10, Dealloc: noDealloc, Ev: noMsg >

< ob("Process1") : Qu | Size: 10, Dealloc: noDealloc, Ev: noMsg >

< ob("Process2") : Qu | Size: 10, Dealloc: noDealloc, Ev: noMsg >

< ob("main") : Qu | Size: 1, Dealloc: noDealloc, Ev: noMsg >

< "Init" : Cl | Inh: noInh, Par: noVid, Att: "p1" |-> null, "p2" |-> null, "p3"
    |-> null, Mtds:
  < "getNeighbor" : Mtdname | Param: noVid, Latt: "p" |-> null, Code: if "="(
    "caller" # "p1") th "p" ::= "p3" el if "="("caller" # "p2") th "p" ::= "p1"
    el "p" ::= "p2" fi fi ; return("p") > *
  < "init" : Mtdname | Param: noVid, Latt: noSubst, Code: "p1" ::= new
    "Process"("this" # int(1)) ; "p2" ::= new "Process"("this" # int(2)) ; "p3"
    ::= new "Process"("this" # int(3)) ; return(emp) >,
  Ocnt: 1 >

< "Process" : Cl | Inh: noInh, Par: "i", "u", Att: "i" |-> null, "neighbor" |->
    null, "status" |-> null, "u" |-> null, Mtds:
  < "init" : Mtdname | Param: noVid, Latt: "label:0" |-> null, "label:1" |->
    null, Code: "status" ::= int(0) ; "label:0" ! "i" . "getNeighbor"(emp) ;
    "label:0" ?("neighbor") ; "label:1" ! "neighbor" . "receive"("u") ; free(
    "label:1") ; return(emp) > *
  < "receive" : Mtdname | Param: "v", Latt: "label:0" |-> null, "v" |-> null,
    Code: if ">"("v" # "u") th "label:0" ! "neighbor" . "receive"("v") ; free(
    "label:0") el if "="("v" # "u") th "status" ::= int(1) el skip fi fi ;
    return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) >,
  Ocnt: 3 >

< ob("Init0") : "Init" | Att: "p1" |-> ob("Process0"), "p2" |-> ob("Process1"),
    "p3" |-> ob("Process2"), "this" |-> ob("Init0"),
  Pr: idle,
  PrQ: noProc, Lcnt: 3 >

< ob("Process0") : "Process" | Att: "i" |-> ob("Init0"), "neighbor" |-> ob(
    "Process2"), "status" |-> int(0), "this" |-> ob("Process0"), "u" |-> int(
    1),
  Pr: idle,
  PrQ: noProc, Lcnt: 7 >

< ob("Process1") : "Process" | Att: "i" |-> ob("Init0"), "neighbor" |-> ob(
    "Process0"), "status" |-> int(0), "this" |-> ob("Process1"), "u" |-> int(
    2),
  Pr: idle,
  PrQ: noProc, Lcnt: 6 >

< ob("Process2") : "Process" | Att: "i" |-> ob("Init0"), "neighbor" |-> ob(
    "Process1"), "status" |-> int(1), "this" |-> ob("Process2"), "u" |-> int(
    3),
  Pr: idle,
  PrQ: noProc, Lcnt: 5 >

< ob("main") : "NoClass" | Att: noSubst,
  Pr: idle,
  PrQ: noProc, Lcnt: 0 >
Bye.
