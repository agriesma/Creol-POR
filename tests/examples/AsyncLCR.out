==========================================
reduce in PROGRAM : init .
result Configuration: 
< "Init" : Cl | Inh: noInh, Par: noVid, Att: "p1" |-> null, "p2" |-> null, "p3"
    |-> null, Mtds:
  < "getNeighbor" : Mtdname | Param: noVid, Latt: "p" |-> null, Code: if "="(
    "caller" # "p1") th "p" ::= "p3" el if "="("caller" # "p2") th "p" ::= "p1"
    el "p" ::= "p2" fi fi ; return("p") > *
  < "init" : Mtdname | Param: noVid, Latt: noSubst, Code: "p1" ::= new
    "Process"("this" # int(1)) ; "p2" ::= new "Process"("this" # int(2)) ; "p3"
    ::= new "Process"("this" # int(3)) ; return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) >,
  Ocnt: 0 >

< "Process" : Cl | Inh: noInh, Par: "i", "u", Att: "i" |-> null, "neighbor" |->
    null, "status" |-> null, "u" |-> null, Mtds:
  < "init" : Mtdname | Param: noVid, Latt: "label:0" |-> null, "label:1" |->
    null, Code: "status" ::= int(0) ; "label:0" ! "i" . "getNeighbor"(emp) ;
    "label:0" ?("neighbor") ; "label:1" ! "neighbor" . "receive"("u") ; free(
    "label:1") ; return(emp) > *
  < "receive" : Mtdname | Param: "v", Latt: "label:0" |-> null, "v" |-> null,
    Code: if ">"("v" # "u") th "label:0" ! "neighbor" . "receive"("v") ; free(
    "label:0") el if "="("v" # "u") th "status" ::= int(1) el skip fi fi ;
    return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) >,
  Ocnt: 0 >
==========================================
rewrite in PROGRAM : init
main("Init", emp) .
result Configuration: (comp(label(ob("Init0"),1), emp) from ob("Init0") to ob(
    "Init0")
)
(invoc(ob("Process0"), label(ob("Process0"),1), "getNeighbor", emp) from ob(
    "Process0") to ob("Init0")
)
(invoc(ob("Process1"), label(ob("Process1"),1), "getNeighbor", emp) from ob(
    "Process1") to ob("Init0")
)
(invoc(ob("Process2"), label(ob("Process2"),1), "getNeighbor", emp) from ob(
    "Process2") to ob("Init0")
)

< "Init" : Cl | Inh: noInh, Par: noVid, Att: "p1" |-> null, "p2" |-> null, "p3"
    |-> null, Mtds:
  < "getNeighbor" : Mtdname | Param: noVid, Latt: "p" |-> null, Code: if "="(
    "caller" # "p1") th "p" ::= "p3" el if "="("caller" # "p2") th "p" ::= "p1"
    el "p" ::= "p2" fi fi ; return("p") > *
  < "init" : Mtdname | Param: noVid, Latt: noSubst, Code: "p1" ::= new
    "Process"("this" # int(1)) ; "p2" ::= new "Process"("this" # int(2)) ; "p3"
    ::= new "Process"("this" # int(3)) ; return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) >,
  Ocnt: 1 >

< "Process" : Cl | Inh: noInh, Par: "i", "u", Att: "i" |-> null, "neighbor" |->
    null, "status" |-> null, "u" |-> null, Mtds:
  < "init" : Mtdname | Param: noVid, Latt: "label:0" |-> null, "label:1" |->
    null, Code: "status" ::= int(0) ; "label:0" ! "i" . "getNeighbor"(emp) ;
    "label:0" ?("neighbor") ; "label:1" ! "neighbor" . "receive"("u") ; free(
    "label:1") ; return(emp) > *
  < "receive" : Mtdname | Param: "v", Latt: "label:0" |-> null, "v" |-> null,
    Code: if ">"("v" # "u") th "label:0" ! "neighbor" . "receive"("v") ; free(
    "label:0") el if "="("v" # "u") th "status" ::= int(1) el skip fi fi ;
    return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) >,
  Ocnt: 3 >

< ob("Init0") : "Init" |
  Att: "p1" |-> ob("Process0"), "p2" |-> ob("Process1"), "p3" |-> ob(
    "Process2"), "this" |-> ob("Init0"),
  Pr: idle,
  PrQ: noProc,
  Dealloc: label(ob("Init0"),1),
  Ev: noMsg,
  Lcnt: 2 >

< ob("Process0") : "Process" |
  Att: "i" |-> ob("Init0"), "neighbor" |-> null, "status" |-> int(0), "this"
    |-> ob("Process0"), "u" |-> int(1),
  Pr: (".label" |-> label(ob("Process0"),0), "caller" |-> ob("Process0"),
    "label:0" |-> label(ob("Process0"),1), "label:1" |-> null), label(ob(
    "Process0"),1) ?("neighbor") ; "label:1" ! "neighbor" . "receive"("u") ;
    free("label:1") ; return(emp) ; cont(label(ob("Process0"),0)),
  PrQ: ".anon" |-> label(ob("Process0"),0), label(ob("Process0"),0) ?(noVid) ;
    ".anon" ! "run"(emp) ; free(".anon"),
  Dealloc: noDealloc,
  Ev: noMsg,
  Lcnt: 2 >

< ob("Process1") : "Process" |
  Att: "i" |-> ob("Init0"), "neighbor" |-> null, "status" |-> int(0), "this"
    |-> ob("Process1"), "u" |-> int(2),
  Pr: (".label" |-> label(ob("Process1"),0), "caller" |-> ob("Process1"),
    "label:0" |-> label(ob("Process1"),1), "label:1" |-> null), label(ob(
    "Process1"),1) ?("neighbor") ; "label:1" ! "neighbor" . "receive"("u") ;
    free("label:1") ; return(emp) ; cont(label(ob("Process1"),0)),
  PrQ: ".anon" |-> label(ob("Process1"),0), label(ob("Process1"),0) ?(noVid) ;
    ".anon" ! "run"(emp) ; free(".anon"),
  Dealloc: noDealloc,
  Ev: noMsg,
  Lcnt: 2 >

< ob("Process2") : "Process" |
  Att: "i" |-> ob("Init0"), "neighbor" |-> null, "status" |-> int(0), "this"
    |-> ob("Process2"), "u" |-> int(3),
  Pr: (".label" |-> label(ob("Process2"),0), "caller" |-> ob("Process2"),
    "label:0" |-> label(ob("Process2"),1), "label:1" |-> null), label(ob(
    "Process2"),1) ?("neighbor") ; "label:1" ! "neighbor" . "receive"("u") ;
    free("label:1") ; return(emp) ; cont(label(ob("Process2"),0)),
  PrQ: ".anon" |-> label(ob("Process2"),0), label(ob("Process2"),0) ?(noVid) ;
    ".anon" ! "run"(emp) ; free(".anon"),
  Dealloc: noDealloc,
  Ev: noMsg,
  Lcnt: 2 >

< ob("main") : "" |
  Att: noSubst,
  Pr: idle,
  PrQ: noProc,
  Dealloc: noDealloc,
  Ev: noMsg,
  Lcnt: 0 >
Bye.
