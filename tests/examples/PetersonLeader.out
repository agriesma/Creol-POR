==========================================
reduce in PROGRAM : init .
result Configuration: 
< "Main" : Cl | Inh: noInh, Par: noVid, Att: "p1" |-> null, "p2" |-> null, "p3"
    |-> null, "p4" |-> null, "p5" |-> null, Mtds:
  < "getNeighbour" : Mtdname | Param: noVid, Latt: "n" |-> null, Code: if "="(
    "caller" # "p1") th "n" ::= "p2" el if "="("caller" # "p2") th "n" ::= "p3"
    el if "="("caller" # "p3") th "n" ::= "p4" el if "="("caller" # "p4") th
    "n" ::= "p5" el if "="("caller" # "p5") th "n" ::= "p1" el skip fi fi fi fi
    fi ; return("n") > *
  < "init" : Mtdname | Param: noVid, Latt: noSubst, Code: "p1" ::= new
    "Process"(int(1) # "this") ; "p2" ::= new "Process"(int(3) # "this") ; "p3"
    ::= new "Process"(int(5) # "this") ; "p4" ::= new "Process"(int(4) #
    "this") ; "p5" ::= new "Process"(int(2) # "this") ; return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) >,
  Ocnt: 0 >

< "Process" : Cl | Inh: noInh, Par: "i", "main", Att: "i" |-> null, "main" |->
    null, "mode" |-> null, "neighbour" |-> null, "status" |-> null, "uid1" |->
    null, "uid2" |-> null, Mtds:
  < "init" : Mtdname | Param: noVid, Latt: "label:0" |-> null, "label:1" |->
    null, Code: (("mode" @@ "Process"), ("status" @@ "Process"), ("uid1" @@
    "Process")) ::= bool(true) # int(0) # "i" ; "label:0" ! "main" .
    "getNeighbour"(emp) ; "label:0" ?("neighbour") ; "label:1" ! "neighbour" .
    "send"("i") ; free("label:1") ; return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) > *
  < "send" : Mtdname | Param: "u", Latt: "label:0" |-> null, "label:1" |->
    null, "label:2" |-> null, "u" |-> null, Code: if "mode" th if "="("uid2" #
    null) th if "="("u" # "uid1") th "status" ::= int(1) el "uid2" ::= "u" ;
    "label:0" ! "neighbour" . "send"("u") ; free("label:0") fi el if "&&"(">"(
    "uid2" # "uid1") # ">"("uid2" # "u")) th ("uid1", "uid2") ::= "uid2" # null
    ; "label:1" ! "neighbour" . "send"("uid1") ; free("label:1") el "mode" ::=
    bool(false) fi fi el "label:2" ! "neighbour" . "send"("u") ; free(
    "label:2") fi ; return(emp) >,
  Ocnt: 0 >
==========================================
rewrite in PROGRAM : init
main("Main", emp) .
result Configuration: (comp(label(ob("Main0"),1), emp) from ob("Main0") to ob(
    "Main0")
)
(invoc(ob("Process0"), label(ob("Process0"),1), "getNeighbour", emp) from ob(
    "Process0") to ob("Main0")
)
(invoc(ob("Process1"), label(ob("Process1"),1), "getNeighbour", emp) from ob(
    "Process1") to ob("Main0")
)
(invoc(ob("Process2"), label(ob("Process2"),1), "getNeighbour", emp) from ob(
    "Process2") to ob("Main0")
)
(invoc(ob("Process3"), label(ob("Process3"),1), "getNeighbour", emp) from ob(
    "Process3") to ob("Main0")
)
(invoc(ob("Process4"), label(ob("Process4"),1), "getNeighbour", emp) from ob(
    "Process4") to ob("Main0")
)

< "Main" : Cl | Inh: noInh, Par: noVid, Att: "p1" |-> null, "p2" |-> null, "p3"
    |-> null, "p4" |-> null, "p5" |-> null, Mtds:
  < "getNeighbour" : Mtdname | Param: noVid, Latt: "n" |-> null, Code: if "="(
    "caller" # "p1") th "n" ::= "p2" el if "="("caller" # "p2") th "n" ::= "p3"
    el if "="("caller" # "p3") th "n" ::= "p4" el if "="("caller" # "p4") th
    "n" ::= "p5" el if "="("caller" # "p5") th "n" ::= "p1" el skip fi fi fi fi
    fi ; return("n") > *
  < "init" : Mtdname | Param: noVid, Latt: noSubst, Code: "p1" ::= new
    "Process"(int(1) # "this") ; "p2" ::= new "Process"(int(3) # "this") ; "p3"
    ::= new "Process"(int(5) # "this") ; "p4" ::= new "Process"(int(4) #
    "this") ; "p5" ::= new "Process"(int(2) # "this") ; return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) >,
  Ocnt: 1 >

< "Process" : Cl | Inh: noInh, Par: "i", "main", Att: "i" |-> null, "main" |->
    null, "mode" |-> null, "neighbour" |-> null, "status" |-> null, "uid1" |->
    null, "uid2" |-> null, Mtds:
  < "init" : Mtdname | Param: noVid, Latt: "label:0" |-> null, "label:1" |->
    null, Code: (("mode" @@ "Process"), ("status" @@ "Process"), ("uid1" @@
    "Process")) ::= bool(true) # int(0) # "i" ; "label:0" ! "main" .
    "getNeighbour"(emp) ; "label:0" ?("neighbour") ; "label:1" ! "neighbour" .
    "send"("i") ; free("label:1") ; return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) > *
  < "send" : Mtdname | Param: "u", Latt: "label:0" |-> null, "label:1" |->
    null, "label:2" |-> null, "u" |-> null, Code: if "mode" th if "="("uid2" #
    null) th if "="("u" # "uid1") th "status" ::= int(1) el "uid2" ::= "u" ;
    "label:0" ! "neighbour" . "send"("u") ; free("label:0") fi el if "&&"(">"(
    "uid2" # "uid1") # ">"("uid2" # "u")) th ("uid1", "uid2") ::= "uid2" # null
    ; "label:1" ! "neighbour" . "send"("uid1") ; free("label:1") el "mode" ::=
    bool(false) fi fi el "label:2" ! "neighbour" . "send"("u") ; free(
    "label:2") fi ; return(emp) >,
  Ocnt: 5 >

< ob("Main0") : "Main" |
  Att: "p1" |-> ob("Process0"), "p2" |-> ob("Process1"), "p3" |-> ob(
    "Process2"), "p4" |-> ob("Process3"), "p5" |-> ob("Process4"), "this" |->
    ob("Main0"),
  Pr: idle,
  PrQ: noProc,
  Dealloc: label(ob("Main0"),1),
  Ev: noMsg,
  Lcnt: 2 >

< ob("Process0") : "Process" |
  Att: "i" |-> int(1), "main" |-> ob("Main0"), "mode" |-> bool(true),
    "neighbour" |-> null, "status" |-> int(0), "this" |-> ob("Process0"),
    "uid1" |-> int(1), "uid2" |-> null,
  Pr: (".label" |-> label(ob("Process0"),0), "caller" |-> ob("Process0"),
    "label:0" |-> label(ob("Process0"),1), "label:1" |-> null), label(ob(
    "Process0"),1) ?("neighbour") ; "label:1" ! "neighbour" . "send"("i") ;
    free("label:1") ; return(emp) ; cont(label(ob("Process0"),0)),
  PrQ: ".anon" |-> label(ob("Process0"),0), label(ob("Process0"),0) ?(noVid) ;
    ".anon" ! "run"(emp) ; free(".anon"),
  Dealloc: noDealloc,
  Ev: noMsg,
  Lcnt: 2 >

< ob("Process1") : "Process" |
  Att: "i" |-> int(3), "main" |-> ob("Main0"), "mode" |-> bool(true),
    "neighbour" |-> null, "status" |-> int(0), "this" |-> ob("Process1"),
    "uid1" |-> int(3), "uid2" |-> null,
  Pr: (".label" |-> label(ob("Process1"),0), "caller" |-> ob("Process1"),
    "label:0" |-> label(ob("Process1"),1), "label:1" |-> null), label(ob(
    "Process1"),1) ?("neighbour") ; "label:1" ! "neighbour" . "send"("i") ;
    free("label:1") ; return(emp) ; cont(label(ob("Process1"),0)),
  PrQ: ".anon" |-> label(ob("Process1"),0), label(ob("Process1"),0) ?(noVid) ;
    ".anon" ! "run"(emp) ; free(".anon"),
  Dealloc: noDealloc,
  Ev: noMsg,
  Lcnt: 2 >

< ob("Process2") : "Process" |
  Att: "i" |-> int(5), "main" |-> ob("Main0"), "mode" |-> bool(true),
    "neighbour" |-> null, "status" |-> int(0), "this" |-> ob("Process2"),
    "uid1" |-> int(5), "uid2" |-> null,
  Pr: (".label" |-> label(ob("Process2"),0), "caller" |-> ob("Process2"),
    "label:0" |-> label(ob("Process2"),1), "label:1" |-> null), label(ob(
    "Process2"),1) ?("neighbour") ; "label:1" ! "neighbour" . "send"("i") ;
    free("label:1") ; return(emp) ; cont(label(ob("Process2"),0)),
  PrQ: ".anon" |-> label(ob("Process2"),0), label(ob("Process2"),0) ?(noVid) ;
    ".anon" ! "run"(emp) ; free(".anon"),
  Dealloc: noDealloc,
  Ev: noMsg,
  Lcnt: 2 >

< ob("Process3") : "Process" |
  Att: "i" |-> int(4), "main" |-> ob("Main0"), "mode" |-> bool(true),
    "neighbour" |-> null, "status" |-> int(0), "this" |-> ob("Process3"),
    "uid1" |-> int(4), "uid2" |-> null,
  Pr: (".label" |-> label(ob("Process3"),0), "caller" |-> ob("Process3"),
    "label:0" |-> label(ob("Process3"),1), "label:1" |-> null), label(ob(
    "Process3"),1) ?("neighbour") ; "label:1" ! "neighbour" . "send"("i") ;
    free("label:1") ; return(emp) ; cont(label(ob("Process3"),0)),
  PrQ: ".anon" |-> label(ob("Process3"),0), label(ob("Process3"),0) ?(noVid) ;
    ".anon" ! "run"(emp) ; free(".anon"),
  Dealloc: noDealloc,
  Ev: noMsg,
  Lcnt: 2 >

< ob("Process4") : "Process" |
  Att: "i" |-> int(2), "main" |-> ob("Main0"), "mode" |-> bool(true),
    "neighbour" |-> null, "status" |-> int(0), "this" |-> ob("Process4"),
    "uid1" |-> int(2), "uid2" |-> null,
  Pr: (".label" |-> label(ob("Process4"),0), "caller" |-> ob("Process4"),
    "label:0" |-> label(ob("Process4"),1), "label:1" |-> null), label(ob(
    "Process4"),1) ?("neighbour") ; "label:1" ! "neighbour" . "send"("i") ;
    free("label:1") ; return(emp) ; cont(label(ob("Process4"),0)),
  PrQ: ".anon" |-> label(ob("Process4"),0), label(ob("Process4"),0) ?(noVid) ;
    ".anon" ! "run"(emp) ; free(".anon"),
  Dealloc: noDealloc,
  Ev: noMsg,
  Lcnt: 2 >

< ob("main") : "" |
  Att: noSubst,
  Pr: idle,
  PrQ: noProc,
  Dealloc: noDealloc,
  Ev: noMsg,
  Lcnt: 0 >
Bye.
