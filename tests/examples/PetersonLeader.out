==========================================
reduce in PROGRAM : init .
result Configuration: 
< "Main" : Cl | Inh: noInh, Par: noVid, Att: "p1" |-> null, "p2" |-> null, "p3"
    |-> null, "p4" |-> null, Mtds:
  < "getNeighbour" : Mtdname | Param: noVid, Latt: "n" |-> null, Code: if "="(
    "caller" # "p1") th "n" ::= "p2" el if "="("caller" # "p2") th "n" ::= "p3"
    el if "="("caller" # "p3") th "n" ::= "p4" el if "="("caller" # "p4") th
    "n" ::= "p1" el skip fi fi fi fi ; return("n") > *
  < "init" : Mtdname | Param: noVid, Latt: noSubst, Code: "p1" ::= new
    "Process"(int(1) # "this") ; "p2" ::= new "Process"(int(2) # "this") ; "p3"
    ::= new "Process"(int(3) # "this") ; "p4" ::= new "Process"(int(4) #
    "this") ; return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) >,
  Ocnt: 0 >

< "Process" : Cl | Inh: noInh, Par: "i", "main", Att: "i" |-> null, "main" |->
    null, "mode" |-> null, "neighbour" |-> null, "status" |-> null, "uid1" |->
    null, "uid2" |-> null, "uid3" |-> null, Mtds:
  < "init" : Mtdname | Param: noVid, Latt: "label:0" |-> null, "label:1" |->
    null, Code: (("mode" @@ "Process"), ("status" @@ "Process"), ("uid1" @@
    "Process")) ::= bool(true) # int(0) # "i" ; "label:0" ! "main" .
    "getNeighbour"(emp) ; "label:0" ?("neighbour") ; "label:1" ! "neighbour" .
    "send"("i") ; free("label:1") ; return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) > *
  < "send" : Mtdname | Param: "u", Latt: "label:0" |-> null, "label:1" |->
    null, "label:2" |-> null, "u" |-> null, Code: if "mode" th if "="("uid2" #
    null) th "uid2" ::= "u" ; "label:0" ! "neighbour" . "send"("uid2") ; free(
    "label:0") ; if "="("uid2" # "uid1") th "status" ::= int(1) el skip fi el
    skip ; "uid3" ::= "u" ; if "&&"(">"("uid2" # "uid1") # ">"("uid2" #
    "uid3")) th ("uid1", "uid2", "uid3") ::= "uid2" # null # null ; "label:1" !
    "neighbour" . "send"("uid1") ; free("label:1") el "mode" ::= bool(false) fi
    fi el "label:2" ! "neighbour" . "send"("u") ; free("label:2") fi ; return(
    emp) >,
  Ocnt: 0 >
==========================================
rewrite in PROGRAM : init
main("Main", emp) .
result Configuration: 
< ob("Main0") : Qu | Size: 10, Dealloc: noDealloc, Ev: noMsg >

< ob("Process0") : Qu | Size: 10, Dealloc: noDealloc, Ev: noMsg >

< ob("Process1") : Qu | Size: 10, Dealloc: noDealloc, Ev: noMsg >

< ob("Process2") : Qu | Size: 10, Dealloc: noDealloc, Ev: noMsg >

< ob("Process3") : Qu | Size: 10, Dealloc: noDealloc, Ev: noMsg >

< ob("main") : Qu | Size: 1, Dealloc: noDealloc, Ev: noMsg >

< "Main" : Cl | Inh: noInh, Par: noVid, Att: "p1" |-> null, "p2" |-> null, "p3"
    |-> null, "p4" |-> null, Mtds:
  < "getNeighbour" : Mtdname | Param: noVid, Latt: "n" |-> null, Code: if "="(
    "caller" # "p1") th "n" ::= "p2" el if "="("caller" # "p2") th "n" ::= "p3"
    el if "="("caller" # "p3") th "n" ::= "p4" el if "="("caller" # "p4") th
    "n" ::= "p1" el skip fi fi fi fi ; return("n") > *
  < "init" : Mtdname | Param: noVid, Latt: noSubst, Code: "p1" ::= new
    "Process"(int(1) # "this") ; "p2" ::= new "Process"(int(2) # "this") ; "p3"
    ::= new "Process"(int(3) # "this") ; "p4" ::= new "Process"(int(4) #
    "this") ; return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) >,
  Ocnt: 1 >

< "Process" : Cl | Inh: noInh, Par: "i", "main", Att: "i" |-> null, "main" |->
    null, "mode" |-> null, "neighbour" |-> null, "status" |-> null, "uid1" |->
    null, "uid2" |-> null, "uid3" |-> null, Mtds:
  < "init" : Mtdname | Param: noVid, Latt: "label:0" |-> null, "label:1" |->
    null, Code: (("mode" @@ "Process"), ("status" @@ "Process"), ("uid1" @@
    "Process")) ::= bool(true) # int(0) # "i" ; "label:0" ! "main" .
    "getNeighbour"(emp) ; "label:0" ?("neighbour") ; "label:1" ! "neighbour" .
    "send"("i") ; free("label:1") ; return(emp) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return(emp) > *
  < "send" : Mtdname | Param: "u", Latt: "label:0" |-> null, "label:1" |->
    null, "label:2" |-> null, "u" |-> null, Code: if "mode" th if "="("uid2" #
    null) th "uid2" ::= "u" ; "label:0" ! "neighbour" . "send"("uid2") ; free(
    "label:0") ; if "="("uid2" # "uid1") th "status" ::= int(1) el skip fi el
    skip ; "uid3" ::= "u" ; if "&&"(">"("uid2" # "uid1") # ">"("uid2" #
    "uid3")) th ("uid1", "uid2", "uid3") ::= "uid2" # null # null ; "label:1" !
    "neighbour" . "send"("uid1") ; free("label:1") el "mode" ::= bool(false) fi
    fi el "label:2" ! "neighbour" . "send"("u") ; free("label:2") fi ; return(
    emp) >,
  Ocnt: 4 >

< ob("Main0") : "Main" | Att: "p1" |-> ob("Process0"), "p2" |-> ob("Process1"),
    "p3" |-> ob("Process2"), "p4" |-> ob("Process3"), "this" |-> ob("Main0"),
  Pr: idle,
  PrQ: noProc, Lcnt: 3 >

< ob("Process0") : "Process" | Att: "i" |-> int(1), "main" |-> ob("Main0"),
    "mode" |-> bool(false), "neighbour" |-> ob("Process1"), "status" |-> int(
    1), "this" |-> ob("Process0"), "uid1" |-> int(4), "uid2" |-> int(4), "uid3"
    |-> int(4),
  Pr: idle,
  PrQ: noProc, Lcnt: 8 >

< ob("Process1") : "Process" | Att: "i" |-> int(2), "main" |-> ob("Main0"),
    "mode" |-> bool(false), "neighbour" |-> ob("Process2"), "status" |-> int(
    0), "this" |-> ob("Process1"), "uid1" |-> int(2), "uid2" |-> int(1), "uid3"
    |-> int(4),
  Pr: idle,
  PrQ: noProc, Lcnt: 8 >

< ob("Process2") : "Process" | Att: "i" |-> int(3), "main" |-> ob("Main0"),
    "mode" |-> bool(false), "neighbour" |-> ob("Process3"), "status" |-> int(
    0), "this" |-> ob("Process2"), "uid1" |-> int(3), "uid2" |-> int(2), "uid3"
    |-> int(1),
  Pr: idle,
  PrQ: noProc, Lcnt: 8 >

< ob("Process3") : "Process" | Att: "i" |-> int(4), "main" |-> ob("Main0"),
    "mode" |-> bool(false), "neighbour" |-> ob("Process0"), "status" |-> int(
    0), "this" |-> ob("Process3"), "uid1" |-> int(4), "uid2" |-> int(3), "uid3"
    |-> int(2),
  Pr: idle,
  PrQ: noProc, Lcnt: 8 >

< ob("main") : "" | Att: noSubst,
  Pr: idle,
  PrQ: noProc, Lcnt: 0 >
Bye.
