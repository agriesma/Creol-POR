load creol-interpreter
mod PROGRAM is
pr CREOL-INTERPRETER .
op init : -> Configuration [ctor] .
eq init =
< "Process" : Cl | Inh: noInh, Par: "i" , "u", Att: "i" |-> null , "u" |-> null , "status" |-> null , "neighbor" |-> null, Mtds: 
  < "init" : Mtdname | Param: noVid, Latt: "label:1" |-> null , "label:0" |-> null, Code: "status" ::= int(0) ; "label:0" ! "i" . "getNeighbor" ( emp ) ; ( "label:0" ? ( "neighbor" ) )  ; "label:1" ! "neighbor" . "receive" ( "u" ) ; free( "label:1" ) ; return ( emp ) > *
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return ( emp ) > *
  < "receive" : Mtdname | Param: "v", Latt: "v" |-> null , "label:0" |-> null, Code: if ">" ( "v" # "u" ) th "label:0" ! "neighbor" . "receive" ( "v" ) ; free( "label:0" ) el if "=" ( "v" # "u" ) th "status" ::= int(1) el skip fi fi ; return ( emp ) >, Ocnt: 0 >

< "Init" : Cl | Inh: noInh, Par: noVid, Att: "p1" |-> null , "p2" |-> null , "p3" |-> null, Mtds: 
  < "run" : Mtdname | Param: noVid, Latt: noSubst, Code: skip ; return ( emp ) > *
  < "init" : Mtdname | Param: noVid, Latt: noSubst, Code: "p1" ::= new "Process" ( "this" # int(1) ) ; "p2" ::= new "Process" ( "this" # int(2) ) ; "p3" ::= new "Process" ( "this" # int(3) ) ; return ( emp ) > *
  < "getNeighbor" : Mtdname | Param: noVid, Latt: "p" |-> null, Code: if "=" ( "caller" # "p1" ) th "p" ::= "p3" el if "=" ( "caller" # "p2" ) th "p" ::= "p1" el "p" ::= "p2" fi fi ; return ( "p" ) >, Ocnt: 0 >

.
endm
