load modelchecker
mod PROGRAM is
pr CREOL-MODEL-CHECKER .
op init : -> Configuration [ctor] .
eq init =
< "Philosopher" : Cl | Inh: noInh, Par: "butler", Att: "butler" |-> null , "hungry" |-> null , "chopstick" |-> null , "neighbor" |-> null, Mtds: 
  < "init" : Mtdname | Param: noAid, Latt: noSubst, Code: "chopstick" ::= bool(true) ; "hungry" ::= bool(false) ; "sync.0" ! "butler" . "getNeighbor" ( emp ) ; ( "sync.0" ? ( "neighbor" ) )  ; return ( emp ) > *
  < "run" : Mtdname | Param: noAid, Latt: noSubst, Code: ( ( ".anon" ! "this" . "think" (emp ) )  ; free( ".anon" ) ||| ( ".anon" ! "this" . "eat" (emp ) )  ; free( ".anon" ) ) ; return ( emp ) > *
  < "eat" : Mtdname | Param: noAid, Latt: noSubst, Code: ( await "hungry" ) ; "sync.0" ! "neighbor" . "borrowStick" ( emp ) ; ( await ( "sync.0" ?? ) ) ; ( "sync.0" ? ( noAid ) )  ; ( await "chopstick" ) ; "hungry" ::= bool(false) ; ".anon" ! "neighbor" . "returnStick" ( emp ) ; free( ".anon" ) ; ( ".anon" ! "this" . "eat" (emp ) )  ; free( ".anon" ) ; return ( emp ) > *
  < "think" : Mtdname | Param: noAid, Latt: noSubst, Code: ( await "~" ( "hungry" ) ) ; release ; "hungry" ::= bool(true) ; ( ".anon" ! "this" . "think" (emp ) )  ; free( ".anon" ) ; return ( emp ) > *
  < "borrowStick" : Mtdname | Param: noAid, Latt: noSubst, Code: ( await "chopstick" ) ; "chopstick" ::= bool(false) ; return ( emp ) > *
  < "returnStick" : Mtdname | Param: noAid, Latt: noSubst, Code: "chopstick" ::= bool(true) ; return ( emp ) >, Ocnt: 0 >

< "Butler" : Cl | Inh: noInh, Par: noAid, Att: "p1" |-> null , "p2" |-> null , "p3" |-> null , "p4" |-> null , "p5" |-> null, Mtds: 
  < "init" : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; return ( emp ) > *
  < "run" : Mtdname | Param: noAid, Latt: noSubst, Code: "p1" ::= new "Philosopher" ( "this" ) ; "p2" ::= new "Philosopher" ( "this" ) ; "p3" ::= new "Philosopher" ( "this" ) ; "p4" ::= new "Philosopher" ( "this" ) ; "p5" ::= new "Philosopher" ( "this" ) ; return ( emp ) > *
  < "getNeighbor" : Mtdname | Param: noAid, Latt: "neighbor" |-> null, Code: if "=" ( "caller" # "p1" ) th "neighbor" ::= "p2" el if "=" ( "caller" # "p2" ) th "neighbor" ::= "p3" el if "=" ( "caller" # "p3" ) th "neighbor" ::= "p4" el if "=" ( "caller" # "p4" ) th "neighbor" ::= "p5" el "neighbor" ::= "p1" fi fi fi fi ; return ( "neighbor" ) >, Ocnt: 0 >

.
endm


mod PROGRAM-CHECKER is
  protecting MODEL-CHECKER .
  protecting PROGRAM .
  protecting CREOL-PREDICATES .
endm
