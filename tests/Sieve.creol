interface Sieve
begin
with Any
op send(in x: Nat; out r: Bool)
end

class Generator
begin
  var n: Integer
  var next: Sieve
  op init == next := new Sieve(2); n := 3
  op run == var r: Bool; next.send(n; r); n := n + 1
end

class Sieve(p: Integer) implements Sieve
begin
  var next: Sieve
  op send(in n: Integer; out res: Bool) ==
    var d: Integer := n / p, r: Integer := n - d * p;
    if r = 0
    then res := false
    else if next /= nil
         then next.send(n, res)
         else next := new Sieve(n); res := true
         fi
    fi
end
