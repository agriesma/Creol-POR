dnl syntax.at  -- Test the Creol parser.
dnl
dnl This file is part of creoltools
dnl
dnl Written and Copyright (c) 2009 by Marcel Kyas
dnl
dnl This program is free software; you can redistribute it and/or
dnl modify it under the terms of the GNU General Public License as
dnl published by the Free Software Foundation; either version 3 of the
dnl License, or (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program.  If not, see <http://www.gnu.org/licenses/>.
dnl

AT_SETUP([syntax])
AT_DATA([test.creol], [])
AT_CHECK([${CREOLC} -T none test.creol], [0], [], [])

AT_DATA([test.creol], [[class C begin var x: Int end
]])
AT_CHECK([${CREOLC} -T none test.creol], [0], [], [])

AT_DATA([test.creol],
[[class C begin var x: Int := 0 end
]])
AT_CHECK([${CREOLC} -T none test.creol], [0], [], [])

AT_DATA([test.creol],
[[class C begin var x: Int var y: Int end
]])
AT_CHECK([${CREOLC} -T none test.creol], [0], [], [])

AT_DATA([test.creol],
[[class C begin var x: Int 0 end
]])
AT_CHECK([${CREOLC} -T none test.creol], [1], [],
[[test.creol:1: syntax error in variable declaration (missing initialiser?)
]])

AT_DATA([test.creol],
[[class C begin var x: Int := a 0 end
]])
AT_CHECK([${CREOLC} -T none test.creol], [1], [],
[[test.creol:1: syntax error in variable initialiser
]])

AT_DATA([test.creol],
[[class C begin var x Int end
]])
AT_CHECK([${CREOLC} -T none test.creol], [1], [],
[[test.creol:1: syntax error in variable declaration (missing type?)
]])

AT_DATA([test.creol],
[[class C begin var x: int end
]])
AT_CHECK([${CREOLC} -T none test.creol], [1], [],
[[test.creol:1: syntax error in variable declaration (not a type?)
]])

AT_DATA([test.creol],
[[class C begin var x := 0 end
]])
AT_CHECK([${CREOLC} -T none test.creol], [1], [],
[[test.creol:1: syntax error in variable declaration (missing type?)
]])

AT_DATA([test.creol],
[[class C begin var x; end
]])
AT_CHECK([${CREOLC} -T none test.creol], [1], [],
[[test.creol:1: syntax error in variable declaration (missing type?)
]])

AT_DATA([test.creol],
[[class C begin var x: ; end
]])
AT_CHECK([${CREOLC} -T none test.creol], [1], [],
[[test.creol:1: syntax error in variable declaration (not a type?)
]])

AT_DATA([test.creol],
[[class C begin var x: Int; end
]])
AT_CHECK([${CREOLC} -T none test.creol], [0], [], [[]])

AT_DATA([test.creol],
[[class C begin var x: Int := ; end
]])
AT_CHECK([${CREOLC} -T none test.creol], [1], [],
[[test.creol:1: syntax error in variable initialiser
]])

AT_DATA([test.creol],
[[class C begin var x: Int := 0; end
]])
AT_CHECK([${CREOLC} -T none test.creol], [0], [], [[]])

AT_DATA([test.creol],
[[class C begin var x: Int; 0 end
]])
AT_CHECK([${CREOLC} -T none test.creol], [1], [],
[[test.creol:1: syntax error in class body definition
]])

AT_CLEANUP
