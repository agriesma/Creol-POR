class SAuth
  implements Auth
begin
  var gr: Agent
  op init == skip
  op run == gr := null
  op delay == await (gr = null)
with Any
  op grant(in x:Agent) == delay(;); gr := x
  op revoke(in x:Agent) == if gr = x then gr := null end
  op auth(in x:Agent) == await (gr = x)
end 

class MAuth(gr: Agent)
  implements Auth
begin 
  var gr: Agent
  op init == skip
  op run == gr := null
  op delay == await (gr = null)
with Any
  op grant(in x:Agent) == delay(;); gr := x
  op revoke(in x:Agent) == if gr = x then gr := null end
  op auth(in x:Agent) == await (gr = x)
end 

class Test
  inherits SAuth, DB
  implements High 
begin
with Agent
  op openH(out ok:Bool) == 
  	await clear(caller;ok);
  	if ok then grant:>Sauth(caller;) end
  op access(in key:Int; out y:Data) == 
  	auth:>SAuth(caller;);
  	await access<:DB(key, true; y)
  op closeH == revoke(caller;)
end

class LAuth inherits MAuth, DB implements Low 
begin with Agent
  op openL == // <denne er gal!!!!!!!!! skal ikke kalle clear(..)!!> 
  	await clear(caller; ok);
  	if ok then grant<:MAuth(caller;) end
  op access(in key:Int; out y:Data) == 
  	auth<:MAuth(caller;);
  	await access:>DB(key, false; y)
  op closeL == revoke(caller;)
end

interface HighLow inherits High, Low
begin
end

class HLAuth inherits LAuth, HAuth implements HighLow
begin with Agent
  op access(in key:Int; out y:Data) ==
    if caller = gr@SAuth then
      access2:>HAuth(key, caller;y)
    else
      access2:>LAuth(key, caller;y)
    end
end

class TestAgent(db:HLAuth) implements Agent
begin
	op run ==
		var result:String;
		var ok:Bool;
		db.openH(;ok);
		if ok
		then 
			db.access(123; result);
			// print "Result 1: " + result;
			db.closeH(;)
		end;
		db.openL(;);
		db.access(123; result);
		// print "Result 2: " + result;
		db.access(456; result);
		// print "Result 3: " + result;
		db.closeL(;)
end

class DB 
begin 
	op access(in key:Int, b:Bool; out y:Data) ==
		if (key = 123) 
		then if b
			 then y := "123 is customer Ole Hansen. Phone no: 90807060." 
			 else y := "123 is customer Ole Hansen."
			 end
		else y := "Unknown customer."
		end
end
