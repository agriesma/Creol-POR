/*
 * Contracts.creol -- Corner cases of the creol semantics.
 *
 * This file is part of creoltools
 *
 * Written and Copyright (c) 2007 by Marcel Kyas
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

interface Foo begin with Bar op foo end

interface Bar begin with Any op bar end

interface Baz begin with Any op bar end

class Foo implements Foo
begin
  with Bar op foo == caller.bar(;)
end

class Bar contracts Bar
begin
  var foo: Foo
  op init == foo := new Foo
  with Any op bar == foo.foo(;)
end

class Baz implements Baz inherits Bar begin end

class Main
begin
  var baz: Baz
  op init == baz := new Baz
  op run == baz.bar(;)
end

