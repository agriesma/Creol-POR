/*
 * Diamond.creol -- Corner cases of the Creol semantics.
 *
 * This file is part of creoltools
 *
 * Written and Copyright (c) 2007 by Marcel Kyas
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * This test case is used to analyze how Diamond-shaped inheritance is going
 * to be executed in Creol.
 */
class A(a: Int)
begin
  op init == skip
  op run == skip
  op m(out r: Int) == r := a
end

class B(b: Int) inherits A(b)
begin
  op init == assert a = b
  op run == skip
  op n(out r: Int) == m(; r)
end

class C(c: Int) inherits A(c)
begin
  op init == assert a = c
  op run == skip
  op o(out r: Int) == m(; r)
end

class D inherits B(1), C(2)
begin
  var x: Int
  var y: Int
  op init == skip
  op run == n(; x); o(; y); assert x = 1 && y = 2
end
