load interpreter
mod PROGRAM is
pr INTERPRETER .
op init : -> Configuration [ctor] .
eq init =
< 'SantaClausC : Cl | Inh: noInh, Par: noAid, Att: 'ctRreindeers |-> null , 'waitRreindeers |-> null , 'harnessedReindeers |-> null , 'ctElves |-> null , 'waitElves |-> null , 'inofficeElves |-> null, Mtds: 
  < 'run : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'this . 'loop ( emp ) ; return ( emp ) > *
  < 'loop : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ; ( await ( 'equal[[ 'ctReindeers # int(5) ]] ) ) ; ( 'deliverToys( emp : noAid ) [] ( await ( 'equal[[ ( 'and[[ ( 'lessEq[[ int(3) # 'ctElves ]] ) # ( 'not [[ 'ctReindeers ]] ) ]] ) # int(9) ]] ) ) ) ; 'talkToElves( emp : noAid ) ;  ! 'this . 'loop ( emp ) ; return ( emp ) > *
  < 'deliverToys : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ; 'ctReindeers ::= int(0) ; 't1 ! ( 'first[[ 'waitReindeers ]] ) . 'harness ( emp ) ; 'harnessedReindeers ::= ( 'plus[[ 'harnessedReindeers # ( 'first[[ 'waitReindeers ]] ) ]] ) ; 'waitReindeers ::= ( 'rest[[ 'waitReindeers ]] ) ; 't5 ! ( 'first[[ 'waitReindeers ]] ) . 'harness ( emp ) ; 'harnessedReindeers ::= ( 'plus[[ 'harnessedReindeers # ( 'first[[ 'waitReindeers ]] ) ]] ) ; 'waitReindeers ::= ( 'rest[[ 'waitReindeers ]] ) ; ( await ( ( 't1 ? ) 'and ( ( 't2 ? ) 'and ( ( 't3 ? ) 'and ( ( 't4 ? ) 'and ( 't5 ? )) ) ) )  ) ;  ! ( 'first[[ 'harnessedReindeers ]] ) . 'unharness ( emp ) ; 'harnessedReindeers ::= ( 'rest[[ 'harnessedReindeers ]] ) ;  ! ( 'first[[ 'harnessedReindeers ]] ) . 'unharness ( emp ) ; 'harnessedReindeers ::= ( 'rest[[ 'harnessedReindeers ]] ) ; return ( emp ) > *
  < 'talkToelves : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ; 'ctElves ::= ( 'minus[[ 'ctElves # int(3) ]] ) ; 't1 ! ( 'first[[ 'waitElves ]] ) . 'showIn ( emp ) ; 'inofficeElves ::= ( 'plus[[ 'inofficeElves # ( 'first[[ 'waitElves ]] ) ]] ) ; 'waitElves ::= ( 'rest[[ 'waitElves ]] ) ; 't2 ! ( 'first[[ 'waitElves ]] ) . 'showIn ( emp ) ; 'inofficeElves ::= ( 'plus[[ 'inofficeElves # ( 'first[[ 'waitElves ]] ) ]] ) ; 'waitElves ::= ( 'rest[[ 'waitElves ]] ) ; 't3 ! ( 'first[[ 'waitElves ]] ) . 'showIn ( emp ) ; 'inofficeElves ::= ( 'plus[[ 'inofficeElves # ( 'first[[ 'waitElves ]] ) ]] ) ; 'waitElves ::= ( 'rest[[ 'waitElves ]] ) ; ( await ( ( 't1 ? ) 'and ( ( 't2 ? ) 'and ( 't3 ? )) )  ) ; 't1 ! ( 'first[[ 'inoffcieElves ]] ) . 'showOut ( emp ) ; 'inofficeElves ::= ( 'rest[[ 'inofficeElves ]] ) ; 't2 ! ( 'first[[ 'inoffcieElves ]] ) . 'showOut ( emp ) ; 'inofficeElves ::= ( 'rest[[ 'inofficeElves ]] ) ; 't3 ! ( 'first[[ 'inoffcieElves ]] ) . 'showOut ( emp ) ; 'inofficeElves ::= ( 'rest[[ 'inofficeElves ]] ) ; ( await ( ( 't1 ? ) 'and ( ( 't2 ? ) 'and ( 't3 ? )) )  ) ; return ( emp ) > *
  < 'backFromHoliday : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ; 'ctReindeers ::= ( 'plus[[ 'ctReindeers # int(1) ]] ) ; 'waitReindeers ::= ( 'plus[[ 'waitReindeers # 'caller ]] ) ; return ( emp ) > *
  < 'haveProblem : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ; 'ctElves ::= ( 'plus[[ 'ctElves # int(1) ]] ) ; 'waitElves ::= ( 'plus[[ 'waitElves # 'caller ]] ) ; return ( emp ) >, Ocnt: 0 >

< 'ReindeerC : Cl | Inh: noInh, Par: 'sc, Att: 'sc |-> null, Mtds: 
  < 'run : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'this . 'holiday ( emp ) ; return ( emp ) > *
  < 'holiday : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'sc . 'backFromHoliday ( emp ) ; return ( emp ) > *
  < 'deliverToys : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ; skip ; return ( emp ) > *
  < 'harness : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'this . 'deliverToys ( emp ) ; return ( emp ) > *
  < 'unharness : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'this . 'holiday ( emp ) ; return ( emp ) >, Ocnt: 0 >

< 'ElfC : Cl | Inh: noInh, Par: 'sc, Att: 'sc |-> null, Mtds: 
  < 'run : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'this . 'work ( emp ) ; return ( emp ) > *
  < 'work : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'sc . 'haveProblem ( emp ) ; return ( emp ) > *
  < 'talkToSanta : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ; skip ; return ( emp ) > *
  < 'showIn : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'this . 'talkToSanta ( emp ) ; return ( emp ) > *
  < 'showOut : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'this . 'work ( emp ) ; return ( emp ) >, Ocnt: 0 >

< 'LeaderElfC : Cl | Inh: 'ElfC < emp > , Par: 'sc ,, 'elves, Att: 'sc |-> null , 'elves |-> null, Mtds: 
  < 'run : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ; 'run @ 'ElfC( emp : noAid ) ; return ( emp ) > *
  < 'work : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'sc . 'haveProblem ( emp ) ; return ( emp ) >, Ocnt: 0 >

< 'Christmas : Cl | Inh: noInh, Par: noAid, Att: noSubst, Mtds: 
  < 'run : Mtdname | Param: noAid, Latt: 'sc |-> null , 'r |-> null , 'e |-> null, Code: skip ; skip ; 'sc ::= new 'SantaClausClass( emp ) ; 'r ::= new 'Reindeer( 'sc ) ; 'r ::= new 'Reindeer( 'sc ) ; 'r ::= new 'Reindeer( 'sc ) ; 'r ::= new 'Reindeer( 'sc ) ; 'r ::= new 'Reindeer( 'sc ) ; 'e ::= new 'Elf( 'sc ) ; 'e ::= new 'Elf( 'sc ) ; 'e ::= new 'Elf( 'sc ) ; 'e ::= new 'Elf( 'sc ) ; 'e ::= new 'Elf( 'sc ) ; 'e ::= new 'Elf( 'sc ) ; 'e ::= new 'Elf( 'sc ) ; return ( emp ) >, Ocnt: 0 >

.
endm
