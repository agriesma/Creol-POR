load interpreter
mod PROGRAM is
pr INTERPRETER .
op init : -> Configuration [ctor] .
eq init =
< 'BoundedBuffer : Cl | Inh: noInh, Par: noAid, Att: 'buffer |-> null , 'max |-> null , 'n |-> null, Mtds: 
  < 'append : Mtdname | Param: 'd, Latt: 'd |-> null, Code: skip ; skip ; ( await ( 'less[[ 'n # 'max ]] ) ) ; 'buffer ::= ( 'plus[[ 'buffer # 'd ]] ) ; return ( emp ) > *
  < 'remove : Mtdname | Param: noAid, Latt: 'd |-> null, Code: skip ; skip ; ( await ( 'less[[ int(0) # 'n ]] ) ) ; 'd ::= ( 'first[[ 'buffer ]] ) ; 'buffer ::= ( 'rest[[ 'buffer ]] ) ; return ( 'd ) >, Ocnt: 0 >

< 'Prod : Cl | Inh: noInh, Par: 'b, Att: 'b |-> null, Mtds: 
  < 'run : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ; 'this ! 'this . 'loop ( int(0) ) ; return ( emp ) > *
  < 'loop : Mtdname | Param: 'i, Latt: 'i |-> null, Code: skip ; skip ; 'b . 'append( 'i : noAid ) ;  ! 'this . 'loop ( ( 'plus[[ 'i # int(1) ]] ) ) ; return ( emp ) >, Ocnt: 0 >

< 'Cons : Cl | Inh: noInh, Par: 'b, Att: 'b |-> null, Mtds: 
  < 'run : Mtdname | Param: noAid, Latt: noSubst, Code: skip ; skip ;  ! 'this . 'loop ( emp ) ; return ( emp ) > *
  < 'loop : Mtdname | Param: noAid, Latt: 'y |-> null, Code: skip ; skip ; 'b . 'remove( emp : 'y ) ;  ! 'this . 'loop ( emp ) ; return ( emp ) >, Ocnt: 0 >

< 'Starter : Cl | Inh: noInh, Par: noAid, Att: noSubst, Mtds: 
  < 'run : Mtdname | Param: noAid, Latt: 'b |-> null , 'p |-> null , 'c |-> null, Code: skip ; skip ; 'b ::= new 'BoundedBuffer( emp ) ; 'p ::= new 'Producer( 'b ) ; 'c ::= new 'Consumer( 'b ) ; return ( emp ) >, Ocnt: 0 >

.
endm
