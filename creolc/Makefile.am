## Makefile.am - Use automake to create Makefile.in
#
# This file is part of creoltools
#
# Written and Copyright (c) 2007 by Marcel Kyas
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.

export OCAMLPATH

# Subdirs
MOSTLYCLEANFILES	= *~ *.aux *.log *.cmi *.cmo *.cmx *.cma *.cmxa *.o
CLEANFILES		=
DISTCLEANFILES		= Version.ml
MAINTAINERCLEANFILES	= .depend Lexer.ml Parser.ml Parser.mli 

EXTRA_DIST		= .depend Lexer.mll Parser.mly creolc.tex

bin_PROGRAMS		= creolc creolc.opt

BUILT_SOURCES		= Version.ml Lexer.ml Parser.ml Parser.mli

creolc_SOURCES		= Version.ml Misc.ml Messages.ml Creol.ml \
			  CreolTyping.ml \
			  TreeLower.ml \
			  TreeSSA.ml \
			  TreeLife.ml \
			  TreeDeadvar.ml \
			  TreeTailcall.ml \
			  Lexer.ml Lexer.mli \
			  Parser.ml Parser.mli \
			  BackendCreol.ml BackendMaude.ml BackendXML.ml \
			  BackendDot.ml \
			  Passes.ml \
			  Driver.ml

creolc_cmi		= Lexer.cmi Parser.cmi

creolc_cmo		= Version.cmo Misc.cmo Messages.cmo Creol.cmo \
			  CreolTyping.cmo TreeLower.cmo TreeSSA.cmo \
			  TreeLife.cmo TreeDeadvar.cmo TreeTailcall.cmo \
			  Lexer.cmo Parser.cmo \
			  BackendCreol.cmo BackendMaude.cmo BackendXML.cmo \
			  BackendDot.cmo \
			  Passes.cmo Driver.cmo

creolc_opt_SOURCES	= $(creolc_SOURCES)

creolc_cmx		= Version.cmx Misc.cmx Messages.cmx Creol.cmx \
			  CreolTyping.cmx TreeLower.cmx TreeSSA.cmx \
			  TreeLife.cmx TreeDeadvar.cmx TreeTailcall.cmx \
			  Lexer.cmx Parser.cmx \
			  BackendCreol.cmx BackendMaude.cmx BackendXML.cmx \
			  BackendDot.cmx \
			  Passes.cmx Driver.cmx

# This is the subset for which we want to generate documentation.
creolc_DOCSOURCES	= Driver.ml Passes.ml Messages.ml \
			  Lexer.mll Parser.mly \
			  Creol.ml \
			  CreolTyping.ml \
			  TreeLower.ml \
			  TreeSSA.ml \
			  TreeLife.ml \
			  TreeDeadvar.ml \
			  TreeTailcall.ml \
			  BackendCreol.ml BackendMaude.ml BackendXML.ml \
			  BackendDot.ml \
			  Misc.ml

OCAMLC_FLAGS		+= -g
OCAMLOPT_FLAGS		+= -w a
OCAMLFIND_FLAGS		+= -package "unix libxml2 str"

SVNVERSION = \
	if test -d ${top_srcdir}/.svn ; \
	then \
	    env LANG=C svn info | ${AWK} -F: '($$1 == "Last Changed Rev") { printf "${VERSION} (svn-rev %d)", $$2 ; }' ; \
	else \
	    echo -n "${VERSION} (release)" ; \
	fi

SUFFIXES = .ml .mli .mll .mly .cmi .cmo .cmx

creolc: $(creolc_cmi) $(creolc_cmo)
	$(OCAMLFIND) ocamlc $(OCAMLFIND_FLAGS) $(OCAMLC_FLAGS) -linkpkg -o $@ $(creolc_cmo)

creolc.opt: $(creolc_cmi) $(creolc_cmx)
	$(OCAMLFIND) ocamlopt $(OCAMLFIND_FLAGS) $(OCAMLOPT_FLAGS) -linkpkg -o $@ $(creolc_cmx)

.PRECIOUS: *.cmo *.cmi *.cmx
.ml.cmo:
	$(OCAMLFIND) ocamlc $(OCAMLFIND_FLAGS) $(OCAMLC_FLAGS) -o $@ -c $<

.mli.cmi:
	$(OCAMLFIND) ocamlc $(OCAMLFIND_FLAGS) $(OCAMLC_FLAGS) -o $@ -c $<

.ml.cmx:
	$(OCAMLFIND) ocamlopt $(OCAMLFIND_FLAGS) $(OCAMLOPT_FLAGS) -o $@ -c $<

# We must make sure that Creol.cmi is build before Parser.ml, but we
# do not want that Parser.ml depends on Creol.cmi, because then the
# end user needs to have menhir installed in order to rebuild the parser
# sources.  We build Creol.cmi by hand here.  Same goes for Messages.cmi.
#
# Nonetheless, we depend on the source files, since type inference needs
# to be redone after those files have been changed.
#
Parser.ml Parser.mli: Parser.mly Creol.ml Messages.ml
	$(OCAMLFIND) ocamlc $(OCAMLFIND_FLAGS) $(OCAMLC_FLAGS) -c ${srcdir}/Messages.ml
	$(OCAMLFIND) ocamlc $(OCAMLFIND_FLAGS) $(OCAMLC_FLAGS) -c ${srcdir}/Creol.ml
	rm -f Parser.conflicts
	$(MENHIR) $(MENHIR_FLAGS) --infer $<

Lexer.ml: Lexer.mll
	$(OCAMLLEX) -o $@ $<

distclean-local:
	test ! -d html || rm -rf html

.depend: ${srcdir}/Makefile.am $(creolc_SOURCES)
	$(OCAMLFIND) ocamldep $(OCAMLFIND_FLAGS) $(OCAMLDEP_FLAGS) $(creolc_SOURCES) > $@

html-local: ${srcdir}/Makefile.am $(creolc_DOCSOURCES)
	test ! -d html || rm -rf html
	mkdir html
	$(OCAMLFIND) ocamldoc $(OCAMLFIND_FLAGS) -html -d html -m A $(creolc_DOCSOURCES)
	date > $@

# Update version.
Version.ml: version.tmp

.PHONY: version.tmp
version.tmp:
	@(echo "(* This file is automatically generated.  Do not modify. *)" ; \
	 echo "let version = \"`${SVNVERSION}`\"" ; \
	 echo "let package = \"${PACKAGE}\"" ; \
	 echo "let datadir = \"${pkgdatadir}\"" ; \
	 echo "let reldate = \"${RELEASE_DATE}\"" ) > $@
	@cmp -s $@ Version.ml || (echo "Updating Version.ml" ; cp $@ Version.ml)
	@rm -f $@

# Literate programming, for documenting and explaining the compiler.
pdf-local: creolc.pdf

creolc.pdf: creolc.tex code.tex
	${PDFLATEX} creolc
	${PDFLATEX} creolc

code.tex: ${srcdir}/Makefile.am ${creolc_DOCSOURCES}
	${OCAMLWEB} --no-preamble --no-index ${creolc_DOCSOURCES} -o $@

# Dependencies.
Lexer.cmo: Parser.cmi
-include ${srcdir}/.depend
